#+TITLE: Dotfiles
#+AUTHOR: Roger Gonz√°lez
#+STARTUP: overview
#+OPTIONS: toc:3 num:nil h:4

* Dotfiles
:PROPERTIES:
:ID:       e7ff52ea-2ed0-4258-8016-323934fa2724
:END:

[[https://gitlab.com/-/project/16079618/uploads/f422a18768ccf21958dba0c2ef6cab5b/2025-01-07-185327.png]]
[[https://gitlab.com/-/project/16079618/uploads/993e7b45fe20bd01b751013f6845355a/2025-01-07-185523.png]]
[[https://gitlab.com/-/project/16079618/uploads/13c70f7b3737397348bba6318145787e/2025-01-07-190422.png]]

Dotfiles are the customization files that are used to personalize your Linux or other Unix-based system.
You can tell that a file is a dotfile because the name of the file will begin with a period--a dot! The
period at the beginning of a filename or directory name indicates that it is a hidden file or directory.
This repository contains my personal dotfiles. They are stored here for convenience so that I may quickly
access them on new machines or new installs. Also, others may find some of my configurations helpful in
customizing their own dotfiles.

** Configurations
:PROPERTIES:
:ID:       81c82579-f802-4ed4-8728-10b80f5271f2
:END:
All important configuration files are designed to be managed with Org-mode's tangling feature. Each
configuration is contained in a =README.org= file that automatically tangles to the appropriate config
file when saved.

| Configuration | Description                       | Path                           |
|---------------+-----------------------------------+--------------------------------|
| [[./.config/i3/README.org][i3wm]]          | Tiling window manager             | =.config/i3/README.org=        |
| [[./.config/polybar/README.org][Polybar]]       | Status bar                        | =.config/polybar/README.org=   |
| [[./.config/alacritty/README.org][Alacritty]]     | GPU-accelerated terminal emulator | =.config/alacritty/README.org= |
| [[./.config/fish/README.org][Fish Shell]]    | User-friendly shell               | =.config/fish/README.org=      |
| [[./.config/ghostty/README.org][Ghostty]]       | Modern terminal emulator          | =.config/ghostty/README.org=   |

** Installation
:PROPERTIES:
:ID:       a7b8c9d0-1234-5678-90ab-cdef12345678
:END:

*** Automated Installation (Recommended)
:PROPERTIES:
:ID:       b8c9d0e1-2345-6789-01bc-def123456789
:END:

The repository includes an automated installation script that sets up everything you need on a fresh
Manjaro or Debian system.

**** What Gets Installed
:PROPERTIES:
:ID:       c9d0e1f2-3456-7890-12cd-ef1234567890
:END:

The installation script automatically handles:

- *Dotfiles Management*: Clones and sets up the bare repository
- *Package Installation*:
  - Manjaro: Installs packages via =pacman= and =yay= (AUR)
  - Debian: Installs packages via =apt=
- *Fish Shell*: Sets as default shell, installs Oh My Fish and Tide theme
- *Nerd Fonts*: Downloads and installs MesloLGS Nerd Font
- *Doom Emacs*: Clones, installs, and syncs with your configuration
- *OpenCode*: AI-powered code editor
- *Aider*: AI pair programming assistant
- *Verification*: Checks all installations completed successfully

**** Prerequisites
:PROPERTIES:
:ID:       d0e1f2g3-4567-8901-23de-f12345678901
:END:

- A fresh Manjaro or Debian installation
- =git= installed
- =sudo= privileges
- For Manjaro: =yay= installed (for AUR packages)

**** Running the Installer
:PROPERTIES:
:ID:       e1f2g3h4-5678-9012-34ef-123456789012
:END:

Run the following command to start the automated installation:

#+begin_src bash
bash <(curl -L https://git.rogs.me/rogs/dotfiles/raw/branch/master/.install-dotfiles.sh)
#+end_src

Or clone and run manually:

#+begin_src bash
git clone --bare https://git.rogs.me/rogs/dotfiles ~/.cfg
~/.cfg/.install-dotfiles.sh
#+end_src

**** Post-Installation Steps
:PROPERTIES:
:ID:       f2g3h4i5-6789-0123-45fg-234567890123
:END:

After the installation completes:

1. *Log out and log back in* - Required for Fish shell to become your default
2. *Configure Tide prompt* - Run =tide configure= to customize your prompt appearance
3. *Review backed up files* - Check =~/.config-backup/= for any conflicting files that were backed up

**** Manual Configuration
:PROPERTIES:
:ID:       g3h4i5j6-7890-1234-56gh-345678901234
:END:

Some configurations may need manual adjustment based on your hardware:

- *Display Setup*: Configure =autorandr= profiles for your monitor setup
- *Logitech Devices*: Adjust =logid.cfg= for your specific Logitech hardware
- *i3 Window Manager*: Customize keybindings and workspace layouts in =.config/i3/config=

*** Manual Installation
:PROPERTIES:
:ID:       h4i5j6k7-8901-2345-67hi-456789012345
:END:

If you prefer to set things up manually, follow these steps:

**** 1. Clone the Bare Repository
:PROPERTIES:
:ID:       i5j6k7l8-9012-3456-78ij-567890123456
:END:

#+begin_src bash
git clone --bare https://git.rogs.me/rogs/dotfiles ~/.cfg
#+end_src

**** 2. Define the Config Alias
:PROPERTIES:
:ID:       j6k7l8m9-0123-4567-89jk-678901234567
:END:

#+begin_src bash
alias config='/usr/bin/git --git-dir=$HOME/.cfg/ --work-tree=$HOME'
#+end_src

**** 3. Checkout the Dotfiles
:PROPERTIES:
:ID:       k7l8m9n0-1234-5678-90kl-789012345678
:END:

#+begin_src bash
config checkout
#+end_src

If you get errors about existing files, back them up:

#+begin_src bash
mkdir -p ~/.config-backup
config checkout 2>&1 | grep -E "\s+\." | awk '{print $1}' | \
  xargs -I{} mv {} ~/.config-backup/{}
config checkout
#+end_src

**** 4. Set Show Untracked Files to No
:PROPERTIES:
:ID:       l8m9n0o1-2345-6789-01lm-890123456789
:END:

#+begin_src bash
config config status.showUntrackedFiles no
#+end_src

**** 5. Install Additional Software
:PROPERTIES:
:ID:       m9n0o1p2-3456-7890-12mn-901234567890
:END:

Install the remaining tools manually based on your distribution.

** Who Am I?
:PROPERTIES:
:ID:       eb1fa4e2-77fb-4a7f-ae31-e2413ad634e0
:END:
#+HTML: <img align="left" border="0" padding="4" src="https://gitlab.com/rogs/dotfiles/-/raw/master/.me-small.png">

- My website: https://rogs.me
- My wiki: https://wiki.rogs.me
- My gitlab: https://gitlab.com/rogs

** How To Manage Your Own Dotfiles
:PROPERTIES:
:ID:       c6e5d53d-e85e-4e02-9a0d-5c25f8a003f2
:END:
There are a hundred ways to manage your dotfiles. My first suggestion would be to read up on the subject.
A great place to start is "Your unofficial guide to dotfiles on GitHub": [[https://dotfiles.github.io/]]

Personally, I use the git bare repository method for managing my dotfiles:
[[https://developer.atlassian.com/blog/2016/02/best-way-to-store-dotfiles-git-bare-repo/]]

** Org-mode Tangling
:PROPERTIES:
:ID:       0b82ec84-cdf5-4b6e-9038-40676a629385
:END:
All configuration files in this repository use Org-mode's literate programming capabilities through
tangling. This approach offers several benefits:

- *Documentation and code together*: Each configuration file includes both the code and detailed
  explanations
- *Organized structure*: Configurations are broken down into logical sections with headings
- *Auto-tangling*: Files are automatically processed when saved (with proper setup)

*** Setting Up Auto-Tangle
:PROPERTIES:
:ID:       27863cd5-b90e-41a6-aca8-efa6f49f48fa
:END:
To enable auto-tangling on save, add the following to your Emacs configuration:

#+begin_src emacs-lisp
;; Auto-tangle configuration files
(use-package org
  :config
  (defun org-babel-auto-tangle ()
    "Automatically tangle org files when saved."
    (when (eq major-mode 'org-mode)
      (let ((auto-tangle (cdr (assoc "auto_tangle" (org-collect-keywords '("PROPERTY"))))))
        (when (and auto-tangle (string= auto-tangle "t"))
          (org-babel-tangle)))))
  (add-hook 'after-save-hook #'org-babel-auto-tangle))
#+end_src

** License
:PROPERTIES:
:ID:       268cdeb6-6ec6-4beb-95f7-63c5b4327af0
:END:
The files and scripts in this repository are licensed under the GNU General Public License v3.0
(GPL-3.0). This is a copyleft license that requires anyone who distributes your code or a derivative work
to make the source available under the same terms. It also provides an express grant of patent rights
from contributors to users. The GPL-3.0 ensures your code remains free and open source, protecting it
from being incorporated into proprietary software.
